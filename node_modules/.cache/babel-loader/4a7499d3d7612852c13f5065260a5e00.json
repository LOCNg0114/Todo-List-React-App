{"ast":null,"code":"import _slicedToArray from\"D:/reactjs_new/Todo-List-React/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(props){var _useState=useState(props.edit?props.edit.value:''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var inputRef=useRef(null);useEffect(function(){inputRef.current.focus();});var handleChange=function handleChange(e){setInput(e.target.value);};var handleSubmit=function handleSubmit(e){e.preventDefault();props.onSubmit({id:Math.floor(Math.random()*10000),text:input});setInput('');};return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,className:\"todo-form\",children:props.edit?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Update your item\",value:input,onChange:handleChange,name:\"text\",ref:inputRef,className:\"todo-input edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"todo-button edit\",children:\"Update\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"What need to be done? \",value:input,onChange:handleChange,name:\"text\",ref:inputRef,className:\"todo-input\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,className:\"todo-button\",children:\"Add\"})]})});}export default TodoForm;","map":{"version":3,"sources":["D:/reactjs_new/Todo-List-React/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","edit","value","input","setInput","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":"oHAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,CAAoCC,MAApC,KAAiD,OAAjD,C,6IAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAwB,CACpB,cAA0BJ,QAAQ,CAACI,KAAK,CAACC,IAAN,CAAaD,KAAK,CAACC,IAAN,CAAWC,KAAxB,CAAgC,EAAjC,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,QAAQ,CAAGP,MAAM,CAAC,IAAD,CAAvB,CAEAD,SAAS,CAAC,UAAK,CACXQ,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GACH,CAFQ,CAAT,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACtBL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASR,KAAV,CAAR,CACH,CAFD,CAIA,GAAMS,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,CAAC,CAAG,CACrBA,CAAC,CAACG,cAAF,GAEAZ,KAAK,CAACa,QAAN,CAAe,CACXC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAc,KAAzB,CADO,CAEXC,IAAI,CAAEf,KAFK,CAAf,EAIAC,QAAQ,CAAC,EAAD,CAAR,CACH,CARD,CAUA,mBACI,aAAM,QAAQ,CAAEO,YAAhB,CAA8B,SAAS,CAAG,WAA1C,UACKX,KAAK,CAACC,IAAN,cACG,wCACI,cACI,WAAW,CAAG,kBADlB,CAEI,KAAK,CAAGE,KAFZ,CAGI,QAAQ,CAAIK,YAHhB,CAII,IAAI,CAAG,MAJX,CAKI,GAAG,CAAIH,QALX,CAMI,SAAS,CAAG,iBANhB,EADJ,cASI,eAAQ,OAAO,CAAIM,YAAnB,CAAiC,SAAS,CAAG,kBAA7C,oBATJ,GADH,cAeG,wCACI,cACI,WAAW,CAAG,wBADlB,CAEI,KAAK,CAAGR,KAFZ,CAGI,QAAQ,CAAIK,YAHhB,CAII,IAAI,CAAG,MAJX,CAKI,GAAG,CAAIH,QALX,CAMI,SAAS,CAAG,YANhB,EADJ,cASI,eAAQ,OAAO,CAAIM,YAAnB,CAAiC,SAAS,CAAG,aAA7C,iBATJ,GAhBR,EADJ,CAiCH,CAED,cAAeZ,CAAAA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\n\r\nfunction TodoForm(props){\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className = 'todo-form'>\r\n            {props.edit ? (\r\n                <>\r\n                    <input \r\n                        placeholder = 'Update your item'\r\n                        value ={input}\r\n                        onChange = {handleChange}\r\n                        name = 'text'\r\n                        ref = {inputRef}\r\n                        className = 'todo-input edit'\r\n                    />\r\n                    <button onClick = {handleSubmit} className = 'todo-button edit'>\r\n                        Update\r\n                    </button>\r\n                </>    \r\n            ) : (\r\n                <>\r\n                    <input \r\n                        placeholder = 'What need to be done? '\r\n                        value ={input}\r\n                        onChange = {handleChange}\r\n                        name = 'text'\r\n                        ref = {inputRef}\r\n                        className = 'todo-input'\r\n                    />\r\n                    <button onClick = {handleSubmit} className = 'todo-button'>\r\n                        Add\r\n                    </button>\r\n                </>    \r\n            )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}