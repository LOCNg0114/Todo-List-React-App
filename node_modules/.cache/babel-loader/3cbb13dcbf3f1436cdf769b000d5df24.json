{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactjs_new\\\\Todo-List-React\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"todo-form\",\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Update your item\",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"What need to be done? \",\n        value: input,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"todo-button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["D:/reactjs_new/Todo-List-React/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AACA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMO,YAAY,GAAGF,CAAC,IAAG;AACrBA,IAAAA,CAAC,CAACG,cAAF;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,CADO;AAEXC,MAAAA,IAAI,EAAEjB;AAFK,KAAf;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GARD;;AAUA,sBACI;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAA8B,IAAA,SAAS,EAAG,WAA1C;AAAA,cACKX,KAAK,CAACG,IAAN,gBACG;AAAA,8BACI;AACI,QAAA,WAAW,EAAG,kBADlB;AAEI,QAAA,KAAK,EAAGF,KAFZ;AAGI,QAAA,QAAQ,EAAIO,YAHhB;AAII,QAAA,IAAI,EAAG,MAJX;AAKI,QAAA,GAAG,EAAIH,QALX;AAMI,QAAA,SAAS,EAAG;AANhB;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAQ,QAAA,OAAO,EAAIM,YAAnB;AAAiC,QAAA,SAAS,EAAG,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,oBADH,gBAeG;AAAA,8BACI;AACI,QAAA,WAAW,EAAG,wBADlB;AAEI,QAAA,KAAK,EAAGV,KAFZ;AAGI,QAAA,QAAQ,EAAIO,YAHhB;AAII,QAAA,IAAI,EAAG,MAJX;AAKI,QAAA,GAAG,EAAIH,QALX;AAMI,QAAA,SAAS,EAAG;AANhB;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAQ,QAAA,OAAO,EAAIM,YAAnB;AAAiC,QAAA,SAAS,EAAG,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAhBR;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GAvDQZ,Q;;KAAAA,Q;AAyDT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\n\r\nfunction TodoForm(props){\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(()=> {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className = 'todo-form'>\r\n            {props.edit ? (\r\n                <>\r\n                    <input \r\n                        placeholder = 'Update your item'\r\n                        value ={input}\r\n                        onChange = {handleChange}\r\n                        name = 'text'\r\n                        ref = {inputRef}\r\n                        className = 'todo-input edit'\r\n                    />\r\n                    <button onClick = {handleSubmit} className = 'todo-button edit'>\r\n                        Update\r\n                    </button>\r\n                </>    \r\n            ) : (\r\n                <>\r\n                    <input \r\n                        placeholder = 'What need to be done? '\r\n                        value ={input}\r\n                        onChange = {handleChange}\r\n                        name = 'text'\r\n                        ref = {inputRef}\r\n                        className = 'todo-input'\r\n                    />\r\n                    <button onClick = {handleSubmit} className = 'todo-button'>\r\n                        Add\r\n                    </button>\r\n                </>    \r\n            )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}